See GGR4.100.changes for the original changes around moving from 3.9e to
pK4.0.15.

========== GGR4.101 [21 Feb 2017]

.gitignore
CHANGES
   Files added.

Makefile:
   Change the PROGRAM build from em to uemacs

epath.h:
    Fix a left-over from build testing - change the startup file name
    from  nuemacs.rc to uemacs.rc

word.c
    Change justpara() so that it can handle unicode characters, based on
    the fillpara() code from merging.
    Get the correct indent from column, not byte offset.
    Handle leading whitespace in the paragraph to reformat.
    Make the temporary buffer dynamically allocated, to cater for long
    strings with no spaces.
    Add punctuation handling in ggr-mode.

etc/uemacs.rc
    Bind EscR to search-reverse (not the default replace-string).

etc/uemacs.hlp
    Put back that Metas that had been changed to Esc.

complet.c
    Replace strncpy() calls to populate choices with memcpy(), as we
    have to nul-terminate manually anyway.

eval.c
exec.c
input.c
    Replace strncpy() calls followed by "manual" nul-termination with
    memcpy() ones.

lock.c
    Replace strncpy() call into tmpname with just strcpy(), as fname
    can't be more the NFILEN anyway.

README
readme.39e
    Moved both to the archive directory.

version.h
etc/uemacs.hlp
    Update to version GGR4.101

========== GGR4.102 [22 Feb 2017]

word.c
    Right-justification in fillpara() was leaving an extra space at eol
    after a punctuation mark.
    Increment gap as well if dotflag is set.

word.c
    justify-paragraph (Esc-J) changes had stopped it working at the
    start of a buffer and if there was no whitespace at the start of the
    paragraph.
    Ignore whitedelete() result and force w_doto to 0 (since at the
    start of the buffer it seems to end up as 1).

buffer,c
    Just entering <CR> when prompted for "Use buffer:" (^XB) used to
    take you back to the last one, but now takes you to "main".
    Add back a save of b_name to savnam in swbuffer() missed in the
    migration.

tcap.c
display.c
    Add test for SCROLLCODE around some declarations to avoid
    compilation warnings if this is turned off.

version.h
etc/uemacs.hlp
    Update to version GGR4.102

========== GGR4.103 [22 Feb 2017]

display.c
    Fix a display issue on de-extending a line (coming back to <~col 80
    after having gone beyond there on a long line).
    Looks like a code migration issue.  The loop in upddex() contained
    the 3.9e code, but with the now-absent w_fcol changed to w_fcolor,
    which was set to 7 resulting in an off-by-7 on the redisplay (the
    underlying data was OK, so a redisplay fixed things).
    Replaced with the 4.1 code (but kept the GGR fix on the loop
    constraint).

version.h
etc/uemacs.hlp
    Update to version GGR4.103

========== GGR4.104 [22 Feb 2017]

input.c
    Ensure that getstring doesn't return a garbage buffer, regardless of
    returned status.
    But beware that some callers use the output buffer as a temporary
    prompt buffer!

edef.h
efunc.h
globals.c
names.c
word.c
etc/uemacs.rc
    Add eos_chars() function, eos_list global list and eos-chars
    macro-callable function to set eos_list.
    Use the eos_list in both justpara() and fillpara() for end of
    sentence character handling (an additional space) and remove any
    such added space from the final sentence of a paragraph.
    Define the standard GGR setting ( .!? ) in uemacs.rc.

.gitignore
    Added core

archive/example.rc
    Added.

version.h
etc/uemacs.hlp
    Update to version GGR4.104

========== GGR4.105 [25 Feb2017]

docs/utf8.info
test-files/combining-diacritics
    Added

Makefile
    Replace "-D_BSD_SOURCE -D_SVID_SOURCE" with "-D_DEFAULT_SOURCE" in
    DEFINES for Linux. Some distros warn about this.

basic.c
    Use next_utf8_offset()/prev_utf8_offset() to find start of utf8
    characters.

display.c
    In updpos() we need to allow for the same number of characters
    used by vtputc() for *all* non-printing characters.

globals.c
names.c
random.c
word.c
edef.h
efunc.h
etc/uemacs.rc
    Rename *ggr.mode to *ggr.style, as it isn't a mode.

random.c
    Tidy up the current position display code in showcpos().

utf8.c
utf8.h
    Use MAX_UTF8_LEN for max length of a utf8 sequence. Which, since
    2003, is 4 (not 6).
    Add next_utf8_offset() and prev_utf8_offset() functions.
    Removed is_beginning_utf8().

word.c
    Change prompt in eos_chars() and display current setting.

version.h
etc/uemacs.hlp
    Update to version GGR4.105

========== GGR4.106 [26 Feb 2017]

Makefile
    Add back "-D_BSD_SOURCE -D_SVID_SOURCE" while keeping
    "-D_DEFAULT_SOURCE" in DEFINES for Linux.
    Both need to be there for a transitional period.
    Also added "-D_DEFAULT_SOURCE" to the non-Linux branches as the
    uemacs code itself doesn't use any of them so is just setting them
    for system header files, which can use them or not as they see fit.

archive/original-git.log
    The log of changes from the original pK4.0.15 git repository.

etc/uemacs.rc
    Add a description of some environment variable settings and set
    $overlap to 2 (which was the value used by 3.9e).

fileio.c
file.c
    Check for strcpy()ing a name to itself, which happens when
    activating an inactive buffer.
    The action of strcpy() is undefined for overlapping strings.
    On a Mac it will crash...

display.c
    Change the unexplained 4 in several malloc()s to be sizeof(unicode_t).

basic.c
    Correct the fix in forwpage() to stop before we loop round, and
    hence stay on the last line, not go one past it.
    (Incorrectly merged from 3.9e.)

input.c
    Remove a redundant set of braces around (c == (CONTROL|'I')) as
    otherwise the Mac compiler warns about a possible intended
    assignment.

version.h
etc/uemacs.hlp
    Update to version GGR4.106

========== GGR4.107...

README
CHANGES
KNOWN_ISSUES
    Added README, moved CHANGES and BUGS (=> KNOWN_ISSUES) up to main
    directory.

random.c
    In cinsert(), skip over trailing blank space when looking for a
    trailing '{' and keep correct indent count (not one less for blank
    lines).

charset.h
efunc.h
estruct.h
    Add #ifndef lines to allow for multiple inclusion.

bind.c
input.c
efunc.h
    Change ostring() calls to mlputs and some tidying.
    Remove unused outstring and (now) unused ostring code and
    declarations.

input.c
    getname() code re-indented to make it readable.
    Changed a while() loop to for().
    Increment ttcol during TTputc calls in the expansion code.

word.c
    Ensure that text comes back in the original order after multiple
    successive delete-previous-word calls.

main.c
    Extended usage() to list all available options.
    Added -h (for --help) and -V (for --version) options.
    Allow options to be given as separate tokens.
    Add -d option for specifying config/help directories.

bind.c
eval.c
exec.c
globals.c
main.c
spawn.c
edef.h
efunc.h
epath.h
    Redo code that looks for start-up/help files etc.
    Add INTABLE and INPATH modes to flook(). Fix calls in bind.c,
    eval.c, exec.c, spawn.c
    to use the appropriate setting.
    Only look in current directory in flook() is the insecure (-i)
    command line option has been given.
    Add set_pathname() to bind.c to allow the command-line processing to
    alter the directory path to one given location.
    Add -i (insecure) command line option and associated global flag.
    Alter the structure set-ups in epath.h.  You can now set the default
    table values by defining DFLT_PATH in the compilation options.  The
    help and start-up file names are now uemacs.hlp and uemacs.rc in all
    cases.

version.h
etc/uemacs.hlp
    Update to version GGR4.107

========== GGR4.108...

display.c
    Add NULL as missing 3rd arg (unused) in updateline() for MEMMAP &
    !SCROLLCODE call.

input.c
    Extend the VT220 conditional code inclusion to cover the
        if (c == 128+27) // goto handle_CSI;
    given that the target label is VT220 dependent.

input.c
    #ifdef for MSC not MSDOS when checking mbdepth against MAXDEPTH.

word.c
    Define "int c" within the #ifndef GGR_MODE block.

tcap.c
    Move includes of curses.h and term.h to be within the #if TERMCAP
    block.

display.c
globals.c
edef.h
    Make chg_width and chg_height global (also used by spawn.c).

spawn.c
    Moved code to force full window redraw into force_resize() and call
    this before returning from any function with a system() call.

termio.c
    Fix ANSI prototyping on some functions.

utf8.c
    Fix prev_utf8_offset() to use char for marker and valmask, so we
    don't end up sign-extending into an int and failing tests.

version.h
etc/uemacs.hlp
    Update to version GGR4.108

========== GGR4.109...
The Great Glyphing code change...

Most of this is about adding a structure to describe a character
displayed at a column (a glyph) which may contain multiple utf8
characters when some are Combining Diacritical Marks, or Zerowidth.
The glyph structure mainly affects vtputc() and updateline() (and
their callers) in display.c, but handling of zerowidth entities
extends elsewhere too.

Makefile
    Use gnu99, not c99 as the --std.

basic.c
    Skip over zerowidth characters in getgoal().
    Tell next_utf8_offset(), prev_utf8_offset() to go to the stat of a
    glyph (i.e skip over zerowidth chars).

bind.c
    In bindtokey() and unbindkey() don't write out the message line
    (mini-buffer) prompts if we are processing start-up files.

display.c
    Explicitly initialize scrflags to 0.
    Move vtcol and vtrow to local static storage (display.c is the only
    user).
    Change struct video to have an array of struct glyph rather than
    unicode_t at the end. Changed parameters to affected routines.
    Added set_glyph(), extend_glyph() clone_glyph(), glyph_same(),
    glyph_same_array(), is_space(), TTputglyph() and TTput1char() as
    static functions.
    Add ttput1c() for external callers to reach TTput1char().
    Change vtinit() to setup a struct glyph array for the *whole*
    vscreen and pscreen arrays (not just the currently in use).
    Make the input to vtputc() an *unsigned* int.
    vtputc() now checks for a unicode character over the maximum allowed,
    and display the replacement character for it.
    vtputc() will extend any preceding character glyph on finding a
    zerowidth one.
    vtputc(), vteeol(), updgar(), scrolls(), updext() now call
    set_glyph() to add a character to vscreen.
    scrolls(), texttest() use glyph_same_array() and updateline() uses
    glyph_same() to check for a display change.
    endofline() and updateline() now use is_space() to check for a
    space, so we can cater for any added zerowidth modifiers.
    TTputc() calls were replace with TTputglyph()/TTput1char() ones and
    those functions adjust ttcol.
    Added a missing third arg (as NULL) to another updateline() call.
    Removed use of n as a column counter in modeline(), as vtcol is
    already doing it. Also "unblocked" a code section to remove an
    unnecessary extra level of indentation.
    Use clone_glyph to move vscreen glyphs to pscreen ones in
    updateline().
    Use sigaction(), not signal(), to set-up signals (portability).

edef.h
    Removed vtrow and vtcol (now local to display.c).

efunc.h
    Added ttput1c() and mlreplyall(). Removed (unused) do_backtrace().

estruct.h
    Include utf8.h.
    Define END_UCLIST.
    Lined up comments.

etc/uemacs.rc
    Added some char-replace settings.

globals.c
    Removed vtrow and vtcol (now local to display.c).

input.c
    Added mlreplyall() to get all of the function args in one go when
    called from a start-up script.
    Some TTputc() calls changed to ttput1c().
    Add a SIGWINCH (if defined) handler for getstring to abort the
    minibuffer if it occurs.  Being in a minibuffer confuses the redraw.
    Needs various signal block to ensure we don't pass though
    set-up/take-down code twice.

line.c
line.h
    Added lgetglyph() to get the struct glyph for the current character
    (or just its length).
    Changed ldelchar() to use lgetglyph() for how many bytes to remove.

main.c
    Some TTputc() calls changed to ttput1c().
    Removed the no longer used #define maindef
    Use sigaction(), not signal(), to set-up signals (portability).

names.c
    Added "char-replace" => char_replace() function mapping.

random.c
    In showcpos() use lgetglyph() to get the full glyph data for the
    current character. Display the number of bytes (and unicode
    characters( used in the glyph if more than one.
    Update getccol() to handle zerowidth characters.
    Modified twiddle() to handle multibyte and zerowidth characters.

spawn.c
    Some TTputc() calls changed to ttput1c().

utf8.c
utf8.h
    Modified utf8_to_unicode() to check that the resulting character is
    not more than the maximum utf8 allows.
    next_utf8_offset() and prev_utf8_offset() now have an option to skip
    over zerowidth characters.
    Added zerowidth_type() function and associated data structure.
    Added char_replace() function to map non- (or poorly) represented
    characters to a (user-configurable) replacement one. The list of
    what to map is also user-configurable.
    Added display_for() to work out what should be displayed for a given
    unicode character.

word.c
    Changed to end-of-sentence coding to use END_UCLIST as an end
    marker rather than 0xffffffff (for consistency).

test-files/combining-diacritics
    Added a few more lines

test-files/1ffff
test-files/3uc-test
test-files/3uc-together
test-files/3uc-together-twiddle
test-files/overrun.txt
    Added some small test files. May extend/document more later.

TODO
    Added to the top-level, as a reminder....

version.h
etc/uemacs.hlp
    Update to version GGR4.109

========== GGR4.110

tcap.c
    Change tcapkclose() to not send TE for the systems where it has just
    sent it in tcapclose().

bind.c
    If flook is sent a pathname, check just that and don't look in HOME,
    along PATH or in the table.

spawn.c
    Forbid the runnning of external commands when you are in the
    minibuffer (spawncli(), spawn(), execprg() and pipecmd()).
    There's a forced redraw on return, which ends up clearing the
    minibuffer data, while displaying its status in the status line.

estruct.h
    Set XONXOFF and NATIONL to 0 if GGR_MODE is defined.

posix.c
    Add turning off of IXON if XONXOFF is not set (as done in termio.c).
    Enables ctl-Q and ctl-S to be usable for commands.

bind.c
names.c
efunc.h
    Added an include-file command (for use in start-up files) to include
    another file for processing at that point.

word.c
    Fix justpara() and fillpara() when adding an eos space at the end of
    a line in the middle of a paragraph.

main.c
    Redo command line parsing.
    Add options:
        -c<filepath> replacement for default rc file
        -x<filepath> an additional rc file

version.h
etc/uemacs.hlp
    Update to version GGR4.110

========== GGR4.111

bind.c
exec.c
names.c
efunc.h
    Merge the include-file code added in GGR4.110 with execute-file, as
    they are essentially the same.

main.c
    Further command line handling tidying up.
    Fix -v/-e option handling when mixed in with filenames.
    Remove second startup file check (after handling filenames) and the
    now-redundant startflag variable.

display.c
spawn.c
    Fix up for screen refresh on return from external commands.
    Call newscreensize() at beginning and end of update(). Add a new arg
    to it to stop it calling update() when it is called from the start
    of update(). This ensures that term.t_nrow and term.t_ncol are set
    to "correct" values before we set off. [display.c]
    In updgar() and updupd() only update the minibuffer line when we are
    actually using the minibuffer. This allows us to remove the added
    mberase() call at the end of newscreensize(). [display.c]

    Add get_orig_size() to save the original screen size before
    system() calls.
    force_resize() checks the current col/rows and only sets the chg*
    variables to force a redraw if things have changed and also to set
    term.t_nrow and term.t_ncol back to what they were, not to 0, which
    can cause redraw issues in display.c.
    Renamed to check_for_resize(). [spawn.c]

version.h
etc/uemacs.hlp
    Update to version GGR4.111

==========

